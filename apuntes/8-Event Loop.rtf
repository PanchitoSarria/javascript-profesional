{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red30\green45\blue55;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c15294\c23137\c27843;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl560\sa300\partightenfactor0

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Event Loop
\f1 \
\pard\pardeftab720\sl360\sa150\partightenfactor0

\f0\b0\fs32 \cf3 \strokec3 El\'a0
\b Event Loop
\b0 \'a0hace que Javascript parezca ser multihilo a pesar de que corre en un solo proceso.\
Javascript se organiza usando las siguientes estructuras de datos:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360\partightenfactor0
\ls1\ilvl0
\b \cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Stack
\b0 . Va apilando de forma organizada las diferentes instrucciones que se llaman. Lleva as\'ed un rastro de d\'f3nde est\'e1 el programa, en que punto de ejecuci\'f3n nos encontramos.\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Memory Heap
\b0 . De forma desorganizada se guarda informaci\'f3n de las variables y del scope.\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Schedule Tasks
\b0 . Aqu\'ed se agregan a la cola, las tareas programadas para su ejecuci\'f3n.\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Task Queue
\b0 . Aqu\'ed se agregan las tares que ya est\'e1n listas para pasar al stack y ser ejecutadas. El stack debe estar vac\'edo para que esto suceda.\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 MicroTask Queue
\b0 . Aqu\'ed se agregan las promesas. Esta Queue es la que tiene mayor prioridad.\
\pard\pardeftab720\sl360\sa150\partightenfactor0
\cf3 El Event Loop es un loop que est\'e1 ejecutando todo el tiempo y pasa peri\'f3dicamente revisando las queues y el stack moviendo tareas entre estas dos estructuras.\
}